   0  $accept : Program $end

   1  Program : Pre_Dec
   2          | Program Pre_Dec

   3  Pre_Dec : Func_Def
   4          | Dec

   5  Func_Def : Re_Type_Spec IDENTIFIER '(' ')' Main_Content_Func
   6           | Re_Type_Spec IDENTIFIER '(' Para_List ')' Main_Content_Func

   7  Dec : Func_Dec
   8      | Normal_Dec

   9  Func_Dec : Re_Type_Spec IDENTIFIER '(' ')' ';'
  10           | Re_Type_Spec IDENTIFIER '(' Para_List ')' ';'

  11  Normal_Dec : Re_Type_Spec Normal_Dec_List ';'

  12  Normal_Dec_List : Normal_Dec_One
  13                  | Normal_Dec_List ',' Normal_Dec_One

  14  Normal_Dec_One : IDENTIFIER
  15                 | Array
  16                 | IDENTIFIER '=' Exp
  17                 | Array '=' Array_Cont

  18  Para_List : Para
  19            | Para_List ',' Para

  20  Para : Re_Type_Spec IDENTIFIER
  21       | Re_Type_Spec Array

  22  Array : IDENTIFIER Array_P

  23  Array_P : '[' INT_P ']'
  24          | Array_P '[' INT_P ']'

  25  Array_Cont : '{' '}'
  26             | '{' Exp_List '}'

  27  Exp_List : Exp
  28           | Exp_List ',' Exp

  29  Re_Type_Spec : INT
  30               | CHAR
  31               | BOOL
  32               | DOUBLE
  33               | VOID

  34  Main_Content_Func : '{' '}'
  35                    | '{' Main_Block_List '}'

  36  Main_Block_List : Main_Block
  37                  | Main_Block_List Main_Block

  38  Main_Block : Dec
  39             | Statement

  40  Statement : Simple_S
  41            | End_S

  42  Simple_S : Var '=' Exp ';'

  43  Var : IDENTIFIER
  44      | IDENTIFIER Array_Exp

  45  Array_Exp : '[' Exp ']'
  46            | Array_Exp '[' Exp ']'

  47  End_S : CONTINUE ';'
  48        | BREAK ';'
  49        | RETURN ';'
  50        | RETURN Exp ';'

  51  Exp : Log_Or_Exp

  52  Log_Or_Exp : Log_And_Exp
  53             | Log_Or_Exp OR2 Log_And_Exp

  54  Log_And_Exp : Log_Not_Exp
  55              | Log_And_Exp AND2 Log_Not_Exp

  56  Log_Not_Exp : Com_Exp
  57              | N Com_Exp

  58  Com_Exp : Add_Min_Exp
  59          | Com_Exp SLT Add_Min_Exp
  60          | Com_Exp SLTE Add_Min_Exp
  61          | Com_Exp EE Add_Min_Exp
  62          | Com_Exp BLTE Add_Min_Exp
  63          | Com_Exp BLT Add_Min_Exp
  64          | Com_Exp NEQ Add_Min_Exp

  65  Add_Min_Exp : Mul_Exp
  66              | Add_Min_Exp PLUS Mul_Exp
  67              | Add_Min_Exp MINUS Mul_Exp

  68  Mul_Exp : Unary_Exp
  69          | Mul_Exp MUL Unary_Exp
  70          | Mul_Exp DIV Unary_Exp
  71          | Mul_Exp MOD Unary_Exp

  72  Unary_Exp : Postfix_Exp
  73            | MINUS Postfix_Exp

  74  Postfix_Exp : Left_Exp
  75              | Left_Exp PLUS2
  76              | Left_Exp MINUS2

  77  Left_Exp : Var
  78           | INT_P
  79           | DOUBLE_P
  80           | CHAR_P
  81           | SCIEN_P
  82           | STR_P
  83           | '(' Exp ')'
  84           | IDENTIFIER '(' ')'
  85           | IDENTIFIER '(' Exp_List ')'

state 0
	$accept : . Program $end  (0)

	VOID  shift 1
	INT  shift 2
	DOUBLE  shift 3
	BOOL  shift 4
	CHAR  shift 5
	.  error

	Program  goto 6
	Pre_Dec  goto 7
	Func_Def  goto 8
	Dec  goto 9
	Re_Type_Spec  goto 10
	Func_Dec  goto 11
	Normal_Dec  goto 12


state 1
	Re_Type_Spec : VOID .  (33)

	.  reduce 33


state 2
	Re_Type_Spec : INT .  (29)

	.  reduce 29


state 3
	Re_Type_Spec : DOUBLE .  (32)

	.  reduce 32


state 4
	Re_Type_Spec : BOOL .  (31)

	.  reduce 31


state 5
	Re_Type_Spec : CHAR .  (30)

	.  reduce 30


state 6
	$accept : Program . $end  (0)
	Program : Program . Pre_Dec  (2)

	$end  accept
	VOID  shift 1
	INT  shift 2
	DOUBLE  shift 3
	BOOL  shift 4
	CHAR  shift 5
	.  error

	Pre_Dec  goto 13
	Func_Def  goto 8
	Dec  goto 9
	Re_Type_Spec  goto 10
	Func_Dec  goto 11
	Normal_Dec  goto 12


state 7
	Program : Pre_Dec .  (1)

	.  reduce 1


state 8
	Pre_Dec : Func_Def .  (3)

	.  reduce 3


state 9
	Pre_Dec : Dec .  (4)

	.  reduce 4


state 10
	Func_Def : Re_Type_Spec . IDENTIFIER '(' ')' Main_Content_Func  (5)
	Func_Def : Re_Type_Spec . IDENTIFIER '(' Para_List ')' Main_Content_Func  (6)
	Func_Dec : Re_Type_Spec . IDENTIFIER '(' ')' ';'  (9)
	Func_Dec : Re_Type_Spec . IDENTIFIER '(' Para_List ')' ';'  (10)
	Normal_Dec : Re_Type_Spec . Normal_Dec_List ';'  (11)

	IDENTIFIER  shift 14
	.  error

	Normal_Dec_List  goto 15
	Normal_Dec_One  goto 16
	Array  goto 17


state 11
	Dec : Func_Dec .  (7)

	.  reduce 7


state 12
	Dec : Normal_Dec .  (8)

	.  reduce 8


state 13
	Program : Program Pre_Dec .  (2)

	.  reduce 2


state 14
	Func_Def : Re_Type_Spec IDENTIFIER . '(' ')' Main_Content_Func  (5)
	Func_Def : Re_Type_Spec IDENTIFIER . '(' Para_List ')' Main_Content_Func  (6)
	Func_Dec : Re_Type_Spec IDENTIFIER . '(' ')' ';'  (9)
	Func_Dec : Re_Type_Spec IDENTIFIER . '(' Para_List ')' ';'  (10)
	Normal_Dec_One : IDENTIFIER .  (14)
	Normal_Dec_One : IDENTIFIER . '=' Exp  (16)
	Array : IDENTIFIER . Array_P  (22)

	'('  shift 18
	'='  shift 19
	'['  shift 20
	';'  reduce 14
	','  reduce 14

	Array_P  goto 21


state 15
	Normal_Dec : Re_Type_Spec Normal_Dec_List . ';'  (11)
	Normal_Dec_List : Normal_Dec_List . ',' Normal_Dec_One  (13)

	';'  shift 22
	','  shift 23
	.  error


state 16
	Normal_Dec_List : Normal_Dec_One .  (12)

	.  reduce 12


state 17
	Normal_Dec_One : Array .  (15)
	Normal_Dec_One : Array . '=' Array_Cont  (17)

	'='  shift 24
	';'  reduce 15
	','  reduce 15


state 18
	Func_Def : Re_Type_Spec IDENTIFIER '(' . ')' Main_Content_Func  (5)
	Func_Def : Re_Type_Spec IDENTIFIER '(' . Para_List ')' Main_Content_Func  (6)
	Func_Dec : Re_Type_Spec IDENTIFIER '(' . ')' ';'  (9)
	Func_Dec : Re_Type_Spec IDENTIFIER '(' . Para_List ')' ';'  (10)

	VOID  shift 1
	INT  shift 2
	DOUBLE  shift 3
	BOOL  shift 4
	CHAR  shift 5
	')'  shift 25
	.  error

	Re_Type_Spec  goto 26
	Para_List  goto 27
	Para  goto 28


state 19
	Normal_Dec_One : IDENTIFIER '=' . Exp  (16)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Exp  goto 38
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 20
	Array_P : '[' . INT_P ']'  (23)

	INT_P  shift 49
	.  error


state 21
	Array : IDENTIFIER Array_P .  (22)
	Array_P : Array_P . '[' INT_P ']'  (24)

	'['  shift 50
	')'  reduce 22
	';'  reduce 22
	','  reduce 22
	'='  reduce 22


state 22
	Normal_Dec : Re_Type_Spec Normal_Dec_List ';' .  (11)

	.  reduce 11


state 23
	Normal_Dec_List : Normal_Dec_List ',' . Normal_Dec_One  (13)

	IDENTIFIER  shift 51
	.  error

	Normal_Dec_One  goto 52
	Array  goto 17


state 24
	Normal_Dec_One : Array '=' . Array_Cont  (17)

	'{'  shift 53
	.  error

	Array_Cont  goto 54


state 25
	Func_Def : Re_Type_Spec IDENTIFIER '(' ')' . Main_Content_Func  (5)
	Func_Dec : Re_Type_Spec IDENTIFIER '(' ')' . ';'  (9)

	';'  shift 55
	'{'  shift 56
	.  error

	Main_Content_Func  goto 57


state 26
	Para : Re_Type_Spec . IDENTIFIER  (20)
	Para : Re_Type_Spec . Array  (21)

	IDENTIFIER  shift 58
	.  error

	Array  goto 59


state 27
	Func_Def : Re_Type_Spec IDENTIFIER '(' Para_List . ')' Main_Content_Func  (6)
	Func_Dec : Re_Type_Spec IDENTIFIER '(' Para_List . ')' ';'  (10)
	Para_List : Para_List . ',' Para  (19)

	')'  shift 60
	','  shift 61
	.  error


state 28
	Para_List : Para .  (18)

	.  reduce 18


state 29
	Var : IDENTIFIER .  (43)
	Var : IDENTIFIER . Array_Exp  (44)
	Left_Exp : IDENTIFIER . '(' ')'  (84)
	Left_Exp : IDENTIFIER . '(' Exp_List ')'  (85)

	'('  shift 62
	'['  shift 63
	PLUS2  reduce 43
	MINUS2  reduce 43
	MUL  reduce 43
	DIV  reduce 43
	MOD  reduce 43
	PLUS  reduce 43
	MINUS  reduce 43
	AND2  reduce 43
	OR2  reduce 43
	NEQ  reduce 43
	SLT  reduce 43
	BLT  reduce 43
	SLTE  reduce 43
	BLTE  reduce 43
	EE  reduce 43
	')'  reduce 43
	';'  reduce 43
	','  reduce 43
	']'  reduce 43
	'}'  reduce 43

	Array_Exp  goto 64


state 30
	Left_Exp : INT_P .  (78)

	.  reduce 78


state 31
	Left_Exp : DOUBLE_P .  (79)

	.  reduce 79


state 32
	Left_Exp : SCIEN_P .  (81)

	.  reduce 81


state 33
	Left_Exp : CHAR_P .  (80)

	.  reduce 80


state 34
	Left_Exp : STR_P .  (82)

	.  reduce 82


state 35
	Unary_Exp : MINUS . Postfix_Exp  (73)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	'('  shift 37
	.  error

	Var  goto 39
	Postfix_Exp  goto 65
	Left_Exp  goto 48


state 36
	Log_Not_Exp : N . Com_Exp  (57)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Com_Exp  goto 66
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 37
	Left_Exp : '(' . Exp ')'  (83)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Exp  goto 67
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 38
	Normal_Dec_One : IDENTIFIER '=' Exp .  (16)

	.  reduce 16


state 39
	Left_Exp : Var .  (77)

	.  reduce 77


state 40
	Exp : Log_Or_Exp .  (51)
	Log_Or_Exp : Log_Or_Exp . OR2 Log_And_Exp  (53)

	OR2  shift 68
	')'  reduce 51
	';'  reduce 51
	','  reduce 51
	']'  reduce 51
	'}'  reduce 51


state 41
	Log_Or_Exp : Log_And_Exp .  (52)
	Log_And_Exp : Log_And_Exp . AND2 Log_Not_Exp  (55)

	AND2  shift 69
	OR2  reduce 52
	')'  reduce 52
	';'  reduce 52
	','  reduce 52
	']'  reduce 52
	'}'  reduce 52


state 42
	Log_And_Exp : Log_Not_Exp .  (54)

	.  reduce 54


state 43
	Log_Not_Exp : Com_Exp .  (56)
	Com_Exp : Com_Exp . SLT Add_Min_Exp  (59)
	Com_Exp : Com_Exp . SLTE Add_Min_Exp  (60)
	Com_Exp : Com_Exp . EE Add_Min_Exp  (61)
	Com_Exp : Com_Exp . BLTE Add_Min_Exp  (62)
	Com_Exp : Com_Exp . BLT Add_Min_Exp  (63)
	Com_Exp : Com_Exp . NEQ Add_Min_Exp  (64)

	NEQ  shift 70
	SLT  shift 71
	BLT  shift 72
	SLTE  shift 73
	BLTE  shift 74
	EE  shift 75
	AND2  reduce 56
	OR2  reduce 56
	')'  reduce 56
	';'  reduce 56
	','  reduce 56
	']'  reduce 56
	'}'  reduce 56


state 44
	Com_Exp : Add_Min_Exp .  (58)
	Add_Min_Exp : Add_Min_Exp . PLUS Mul_Exp  (66)
	Add_Min_Exp : Add_Min_Exp . MINUS Mul_Exp  (67)

	PLUS  shift 76
	MINUS  shift 77
	AND2  reduce 58
	OR2  reduce 58
	NEQ  reduce 58
	SLT  reduce 58
	BLT  reduce 58
	SLTE  reduce 58
	BLTE  reduce 58
	EE  reduce 58
	')'  reduce 58
	';'  reduce 58
	','  reduce 58
	']'  reduce 58
	'}'  reduce 58


state 45
	Add_Min_Exp : Mul_Exp .  (65)
	Mul_Exp : Mul_Exp . MUL Unary_Exp  (69)
	Mul_Exp : Mul_Exp . DIV Unary_Exp  (70)
	Mul_Exp : Mul_Exp . MOD Unary_Exp  (71)

	MUL  shift 78
	DIV  shift 79
	MOD  shift 80
	PLUS  reduce 65
	MINUS  reduce 65
	AND2  reduce 65
	OR2  reduce 65
	NEQ  reduce 65
	SLT  reduce 65
	BLT  reduce 65
	SLTE  reduce 65
	BLTE  reduce 65
	EE  reduce 65
	')'  reduce 65
	';'  reduce 65
	','  reduce 65
	']'  reduce 65
	'}'  reduce 65


state 46
	Mul_Exp : Unary_Exp .  (68)

	.  reduce 68


state 47
	Unary_Exp : Postfix_Exp .  (72)

	.  reduce 72


state 48
	Postfix_Exp : Left_Exp .  (74)
	Postfix_Exp : Left_Exp . PLUS2  (75)
	Postfix_Exp : Left_Exp . MINUS2  (76)

	PLUS2  shift 81
	MINUS2  shift 82
	MUL  reduce 74
	DIV  reduce 74
	MOD  reduce 74
	PLUS  reduce 74
	MINUS  reduce 74
	AND2  reduce 74
	OR2  reduce 74
	NEQ  reduce 74
	SLT  reduce 74
	BLT  reduce 74
	SLTE  reduce 74
	BLTE  reduce 74
	EE  reduce 74
	')'  reduce 74
	';'  reduce 74
	','  reduce 74
	']'  reduce 74
	'}'  reduce 74


state 49
	Array_P : '[' INT_P . ']'  (23)

	']'  shift 83
	.  error


state 50
	Array_P : Array_P '[' . INT_P ']'  (24)

	INT_P  shift 84
	.  error


state 51
	Normal_Dec_One : IDENTIFIER .  (14)
	Normal_Dec_One : IDENTIFIER . '=' Exp  (16)
	Array : IDENTIFIER . Array_P  (22)

	'='  shift 19
	'['  shift 20
	';'  reduce 14
	','  reduce 14

	Array_P  goto 21


state 52
	Normal_Dec_List : Normal_Dec_List ',' Normal_Dec_One .  (13)

	.  reduce 13


state 53
	Array_Cont : '{' . '}'  (25)
	Array_Cont : '{' . Exp_List '}'  (26)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	'}'  shift 85
	.  error

	Exp  goto 86
	Exp_List  goto 87
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 54
	Normal_Dec_One : Array '=' Array_Cont .  (17)

	.  reduce 17


state 55
	Func_Dec : Re_Type_Spec IDENTIFIER '(' ')' ';' .  (9)

	.  reduce 9


state 56
	Main_Content_Func : '{' . '}'  (34)
	Main_Content_Func : '{' . Main_Block_List '}'  (35)

	IDENTIFIER  shift 88
	VOID  shift 1
	INT  shift 2
	DOUBLE  shift 3
	BOOL  shift 4
	CHAR  shift 5
	RETURN  shift 89
	BREAK  shift 90
	CONTINUE  shift 91
	'}'  shift 92
	.  error

	Dec  goto 93
	Re_Type_Spec  goto 94
	Func_Dec  goto 11
	Normal_Dec  goto 12
	Main_Block_List  goto 95
	Main_Block  goto 96
	Statement  goto 97
	Simple_S  goto 98
	End_S  goto 99
	Var  goto 100


state 57
	Func_Def : Re_Type_Spec IDENTIFIER '(' ')' Main_Content_Func .  (5)

	.  reduce 5


state 58
	Para : Re_Type_Spec IDENTIFIER .  (20)
	Array : IDENTIFIER . Array_P  (22)

	'['  shift 20
	')'  reduce 20
	','  reduce 20

	Array_P  goto 21


state 59
	Para : Re_Type_Spec Array .  (21)

	.  reduce 21


state 60
	Func_Def : Re_Type_Spec IDENTIFIER '(' Para_List ')' . Main_Content_Func  (6)
	Func_Dec : Re_Type_Spec IDENTIFIER '(' Para_List ')' . ';'  (10)

	';'  shift 101
	'{'  shift 56
	.  error

	Main_Content_Func  goto 102


state 61
	Para_List : Para_List ',' . Para  (19)

	VOID  shift 1
	INT  shift 2
	DOUBLE  shift 3
	BOOL  shift 4
	CHAR  shift 5
	.  error

	Re_Type_Spec  goto 26
	Para  goto 103


state 62
	Left_Exp : IDENTIFIER '(' . ')'  (84)
	Left_Exp : IDENTIFIER '(' . Exp_List ')'  (85)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	')'  shift 104
	.  error

	Exp  goto 86
	Exp_List  goto 105
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 63
	Array_Exp : '[' . Exp ']'  (45)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Exp  goto 106
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 64
	Var : IDENTIFIER Array_Exp .  (44)
	Array_Exp : Array_Exp . '[' Exp ']'  (46)

	'['  shift 107
	PLUS2  reduce 44
	MINUS2  reduce 44
	MUL  reduce 44
	DIV  reduce 44
	MOD  reduce 44
	PLUS  reduce 44
	MINUS  reduce 44
	AND2  reduce 44
	OR2  reduce 44
	NEQ  reduce 44
	SLT  reduce 44
	BLT  reduce 44
	SLTE  reduce 44
	BLTE  reduce 44
	EE  reduce 44
	')'  reduce 44
	';'  reduce 44
	','  reduce 44
	'='  reduce 44
	']'  reduce 44
	'}'  reduce 44


state 65
	Unary_Exp : MINUS Postfix_Exp .  (73)

	.  reduce 73


state 66
	Log_Not_Exp : N Com_Exp .  (57)
	Com_Exp : Com_Exp . SLT Add_Min_Exp  (59)
	Com_Exp : Com_Exp . SLTE Add_Min_Exp  (60)
	Com_Exp : Com_Exp . EE Add_Min_Exp  (61)
	Com_Exp : Com_Exp . BLTE Add_Min_Exp  (62)
	Com_Exp : Com_Exp . BLT Add_Min_Exp  (63)
	Com_Exp : Com_Exp . NEQ Add_Min_Exp  (64)

	NEQ  shift 70
	SLT  shift 71
	BLT  shift 72
	SLTE  shift 73
	BLTE  shift 74
	EE  shift 75
	AND2  reduce 57
	OR2  reduce 57
	')'  reduce 57
	';'  reduce 57
	','  reduce 57
	']'  reduce 57
	'}'  reduce 57


state 67
	Left_Exp : '(' Exp . ')'  (83)

	')'  shift 108
	.  error


state 68
	Log_Or_Exp : Log_Or_Exp OR2 . Log_And_Exp  (53)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Var  goto 39
	Log_And_Exp  goto 109
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 69
	Log_And_Exp : Log_And_Exp AND2 . Log_Not_Exp  (55)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Var  goto 39
	Log_Not_Exp  goto 110
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 70
	Com_Exp : Com_Exp NEQ . Add_Min_Exp  (64)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Add_Min_Exp  goto 111
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 71
	Com_Exp : Com_Exp SLT . Add_Min_Exp  (59)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Add_Min_Exp  goto 112
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 72
	Com_Exp : Com_Exp BLT . Add_Min_Exp  (63)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Add_Min_Exp  goto 113
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 73
	Com_Exp : Com_Exp SLTE . Add_Min_Exp  (60)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Add_Min_Exp  goto 114
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 74
	Com_Exp : Com_Exp BLTE . Add_Min_Exp  (62)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Add_Min_Exp  goto 115
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 75
	Com_Exp : Com_Exp EE . Add_Min_Exp  (61)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Add_Min_Exp  goto 116
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 76
	Add_Min_Exp : Add_Min_Exp PLUS . Mul_Exp  (66)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Mul_Exp  goto 117
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 77
	Add_Min_Exp : Add_Min_Exp MINUS . Mul_Exp  (67)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Mul_Exp  goto 118
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 78
	Mul_Exp : Mul_Exp MUL . Unary_Exp  (69)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Unary_Exp  goto 119
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 79
	Mul_Exp : Mul_Exp DIV . Unary_Exp  (70)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Unary_Exp  goto 120
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 80
	Mul_Exp : Mul_Exp MOD . Unary_Exp  (71)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	'('  shift 37
	.  error

	Var  goto 39
	Unary_Exp  goto 121
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 81
	Postfix_Exp : Left_Exp PLUS2 .  (75)

	.  reduce 75


state 82
	Postfix_Exp : Left_Exp MINUS2 .  (76)

	.  reduce 76


state 83
	Array_P : '[' INT_P ']' .  (23)

	.  reduce 23


state 84
	Array_P : Array_P '[' INT_P . ']'  (24)

	']'  shift 122
	.  error


state 85
	Array_Cont : '{' '}' .  (25)

	.  reduce 25


state 86
	Exp_List : Exp .  (27)

	.  reduce 27


state 87
	Array_Cont : '{' Exp_List . '}'  (26)
	Exp_List : Exp_List . ',' Exp  (28)

	','  shift 123
	'}'  shift 124
	.  error


state 88
	Var : IDENTIFIER .  (43)
	Var : IDENTIFIER . Array_Exp  (44)

	'['  shift 63
	'='  reduce 43

	Array_Exp  goto 64


state 89
	End_S : RETURN . ';'  (49)
	End_S : RETURN . Exp ';'  (50)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	';'  shift 125
	.  error

	Exp  goto 126
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 90
	End_S : BREAK . ';'  (48)

	';'  shift 127
	.  error


state 91
	End_S : CONTINUE . ';'  (47)

	';'  shift 128
	.  error


state 92
	Main_Content_Func : '{' '}' .  (34)

	.  reduce 34


state 93
	Main_Block : Dec .  (38)

	.  reduce 38


state 94
	Func_Dec : Re_Type_Spec . IDENTIFIER '(' ')' ';'  (9)
	Func_Dec : Re_Type_Spec . IDENTIFIER '(' Para_List ')' ';'  (10)
	Normal_Dec : Re_Type_Spec . Normal_Dec_List ';'  (11)

	IDENTIFIER  shift 129
	.  error

	Normal_Dec_List  goto 15
	Normal_Dec_One  goto 16
	Array  goto 17


state 95
	Main_Content_Func : '{' Main_Block_List . '}'  (35)
	Main_Block_List : Main_Block_List . Main_Block  (37)

	IDENTIFIER  shift 88
	VOID  shift 1
	INT  shift 2
	DOUBLE  shift 3
	BOOL  shift 4
	CHAR  shift 5
	RETURN  shift 89
	BREAK  shift 90
	CONTINUE  shift 91
	'}'  shift 130
	.  error

	Dec  goto 93
	Re_Type_Spec  goto 94
	Func_Dec  goto 11
	Normal_Dec  goto 12
	Main_Block  goto 131
	Statement  goto 97
	Simple_S  goto 98
	End_S  goto 99
	Var  goto 100


state 96
	Main_Block_List : Main_Block .  (36)

	.  reduce 36


state 97
	Main_Block : Statement .  (39)

	.  reduce 39


state 98
	Statement : Simple_S .  (40)

	.  reduce 40


state 99
	Statement : End_S .  (41)

	.  reduce 41


state 100
	Simple_S : Var . '=' Exp ';'  (42)

	'='  shift 132
	.  error


state 101
	Func_Dec : Re_Type_Spec IDENTIFIER '(' Para_List ')' ';' .  (10)

	.  reduce 10


state 102
	Func_Def : Re_Type_Spec IDENTIFIER '(' Para_List ')' Main_Content_Func .  (6)

	.  reduce 6


state 103
	Para_List : Para_List ',' Para .  (19)

	.  reduce 19


state 104
	Left_Exp : IDENTIFIER '(' ')' .  (84)

	.  reduce 84


state 105
	Exp_List : Exp_List . ',' Exp  (28)
	Left_Exp : IDENTIFIER '(' Exp_List . ')'  (85)

	')'  shift 133
	','  shift 123
	.  error


state 106
	Array_Exp : '[' Exp . ']'  (45)

	']'  shift 134
	.  error


state 107
	Array_Exp : Array_Exp '[' . Exp ']'  (46)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Exp  goto 135
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 108
	Left_Exp : '(' Exp ')' .  (83)

	.  reduce 83


state 109
	Log_Or_Exp : Log_Or_Exp OR2 Log_And_Exp .  (53)
	Log_And_Exp : Log_And_Exp . AND2 Log_Not_Exp  (55)

	AND2  shift 69
	OR2  reduce 53
	')'  reduce 53
	';'  reduce 53
	','  reduce 53
	']'  reduce 53
	'}'  reduce 53


state 110
	Log_And_Exp : Log_And_Exp AND2 Log_Not_Exp .  (55)

	.  reduce 55


state 111
	Com_Exp : Com_Exp NEQ Add_Min_Exp .  (64)
	Add_Min_Exp : Add_Min_Exp . PLUS Mul_Exp  (66)
	Add_Min_Exp : Add_Min_Exp . MINUS Mul_Exp  (67)

	PLUS  shift 76
	MINUS  shift 77
	AND2  reduce 64
	OR2  reduce 64
	NEQ  reduce 64
	SLT  reduce 64
	BLT  reduce 64
	SLTE  reduce 64
	BLTE  reduce 64
	EE  reduce 64
	')'  reduce 64
	';'  reduce 64
	','  reduce 64
	']'  reduce 64
	'}'  reduce 64


state 112
	Com_Exp : Com_Exp SLT Add_Min_Exp .  (59)
	Add_Min_Exp : Add_Min_Exp . PLUS Mul_Exp  (66)
	Add_Min_Exp : Add_Min_Exp . MINUS Mul_Exp  (67)

	PLUS  shift 76
	MINUS  shift 77
	AND2  reduce 59
	OR2  reduce 59
	NEQ  reduce 59
	SLT  reduce 59
	BLT  reduce 59
	SLTE  reduce 59
	BLTE  reduce 59
	EE  reduce 59
	')'  reduce 59
	';'  reduce 59
	','  reduce 59
	']'  reduce 59
	'}'  reduce 59


state 113
	Com_Exp : Com_Exp BLT Add_Min_Exp .  (63)
	Add_Min_Exp : Add_Min_Exp . PLUS Mul_Exp  (66)
	Add_Min_Exp : Add_Min_Exp . MINUS Mul_Exp  (67)

	PLUS  shift 76
	MINUS  shift 77
	AND2  reduce 63
	OR2  reduce 63
	NEQ  reduce 63
	SLT  reduce 63
	BLT  reduce 63
	SLTE  reduce 63
	BLTE  reduce 63
	EE  reduce 63
	')'  reduce 63
	';'  reduce 63
	','  reduce 63
	']'  reduce 63
	'}'  reduce 63


state 114
	Com_Exp : Com_Exp SLTE Add_Min_Exp .  (60)
	Add_Min_Exp : Add_Min_Exp . PLUS Mul_Exp  (66)
	Add_Min_Exp : Add_Min_Exp . MINUS Mul_Exp  (67)

	PLUS  shift 76
	MINUS  shift 77
	AND2  reduce 60
	OR2  reduce 60
	NEQ  reduce 60
	SLT  reduce 60
	BLT  reduce 60
	SLTE  reduce 60
	BLTE  reduce 60
	EE  reduce 60
	')'  reduce 60
	';'  reduce 60
	','  reduce 60
	']'  reduce 60
	'}'  reduce 60


state 115
	Com_Exp : Com_Exp BLTE Add_Min_Exp .  (62)
	Add_Min_Exp : Add_Min_Exp . PLUS Mul_Exp  (66)
	Add_Min_Exp : Add_Min_Exp . MINUS Mul_Exp  (67)

	PLUS  shift 76
	MINUS  shift 77
	AND2  reduce 62
	OR2  reduce 62
	NEQ  reduce 62
	SLT  reduce 62
	BLT  reduce 62
	SLTE  reduce 62
	BLTE  reduce 62
	EE  reduce 62
	')'  reduce 62
	';'  reduce 62
	','  reduce 62
	']'  reduce 62
	'}'  reduce 62


state 116
	Com_Exp : Com_Exp EE Add_Min_Exp .  (61)
	Add_Min_Exp : Add_Min_Exp . PLUS Mul_Exp  (66)
	Add_Min_Exp : Add_Min_Exp . MINUS Mul_Exp  (67)

	PLUS  shift 76
	MINUS  shift 77
	AND2  reduce 61
	OR2  reduce 61
	NEQ  reduce 61
	SLT  reduce 61
	BLT  reduce 61
	SLTE  reduce 61
	BLTE  reduce 61
	EE  reduce 61
	')'  reduce 61
	';'  reduce 61
	','  reduce 61
	']'  reduce 61
	'}'  reduce 61


state 117
	Add_Min_Exp : Add_Min_Exp PLUS Mul_Exp .  (66)
	Mul_Exp : Mul_Exp . MUL Unary_Exp  (69)
	Mul_Exp : Mul_Exp . DIV Unary_Exp  (70)
	Mul_Exp : Mul_Exp . MOD Unary_Exp  (71)

	MUL  shift 78
	DIV  shift 79
	MOD  shift 80
	PLUS  reduce 66
	MINUS  reduce 66
	AND2  reduce 66
	OR2  reduce 66
	NEQ  reduce 66
	SLT  reduce 66
	BLT  reduce 66
	SLTE  reduce 66
	BLTE  reduce 66
	EE  reduce 66
	')'  reduce 66
	';'  reduce 66
	','  reduce 66
	']'  reduce 66
	'}'  reduce 66


state 118
	Add_Min_Exp : Add_Min_Exp MINUS Mul_Exp .  (67)
	Mul_Exp : Mul_Exp . MUL Unary_Exp  (69)
	Mul_Exp : Mul_Exp . DIV Unary_Exp  (70)
	Mul_Exp : Mul_Exp . MOD Unary_Exp  (71)

	MUL  shift 78
	DIV  shift 79
	MOD  shift 80
	PLUS  reduce 67
	MINUS  reduce 67
	AND2  reduce 67
	OR2  reduce 67
	NEQ  reduce 67
	SLT  reduce 67
	BLT  reduce 67
	SLTE  reduce 67
	BLTE  reduce 67
	EE  reduce 67
	')'  reduce 67
	';'  reduce 67
	','  reduce 67
	']'  reduce 67
	'}'  reduce 67


state 119
	Mul_Exp : Mul_Exp MUL Unary_Exp .  (69)

	.  reduce 69


state 120
	Mul_Exp : Mul_Exp DIV Unary_Exp .  (70)

	.  reduce 70


state 121
	Mul_Exp : Mul_Exp MOD Unary_Exp .  (71)

	.  reduce 71


state 122
	Array_P : Array_P '[' INT_P ']' .  (24)

	.  reduce 24


state 123
	Exp_List : Exp_List ',' . Exp  (28)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Exp  goto 136
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 124
	Array_Cont : '{' Exp_List '}' .  (26)

	.  reduce 26


state 125
	End_S : RETURN ';' .  (49)

	.  reduce 49


state 126
	End_S : RETURN Exp . ';'  (50)

	';'  shift 137
	.  error


state 127
	End_S : BREAK ';' .  (48)

	.  reduce 48


state 128
	End_S : CONTINUE ';' .  (47)

	.  reduce 47


state 129
	Func_Dec : Re_Type_Spec IDENTIFIER . '(' ')' ';'  (9)
	Func_Dec : Re_Type_Spec IDENTIFIER . '(' Para_List ')' ';'  (10)
	Normal_Dec_One : IDENTIFIER .  (14)
	Normal_Dec_One : IDENTIFIER . '=' Exp  (16)
	Array : IDENTIFIER . Array_P  (22)

	'('  shift 138
	'='  shift 19
	'['  shift 20
	';'  reduce 14
	','  reduce 14

	Array_P  goto 21


state 130
	Main_Content_Func : '{' Main_Block_List '}' .  (35)

	.  reduce 35


state 131
	Main_Block_List : Main_Block_List Main_Block .  (37)

	.  reduce 37


state 132
	Simple_S : Var '=' . Exp ';'  (42)

	IDENTIFIER  shift 29
	INT_P  shift 30
	DOUBLE_P  shift 31
	SCIEN_P  shift 32
	CHAR_P  shift 33
	STR_P  shift 34
	MINUS  shift 35
	N  shift 36
	'('  shift 37
	.  error

	Exp  goto 139
	Var  goto 39
	Log_Or_Exp  goto 40
	Log_And_Exp  goto 41
	Log_Not_Exp  goto 42
	Com_Exp  goto 43
	Add_Min_Exp  goto 44
	Mul_Exp  goto 45
	Unary_Exp  goto 46
	Postfix_Exp  goto 47
	Left_Exp  goto 48


state 133
	Left_Exp : IDENTIFIER '(' Exp_List ')' .  (85)

	.  reduce 85


state 134
	Array_Exp : '[' Exp ']' .  (45)

	.  reduce 45


state 135
	Array_Exp : Array_Exp '[' Exp . ']'  (46)

	']'  shift 140
	.  error


state 136
	Exp_List : Exp_List ',' Exp .  (28)

	.  reduce 28


state 137
	End_S : RETURN Exp ';' .  (50)

	.  reduce 50


state 138
	Func_Dec : Re_Type_Spec IDENTIFIER '(' . ')' ';'  (9)
	Func_Dec : Re_Type_Spec IDENTIFIER '(' . Para_List ')' ';'  (10)

	VOID  shift 1
	INT  shift 2
	DOUBLE  shift 3
	BOOL  shift 4
	CHAR  shift 5
	')'  shift 141
	.  error

	Re_Type_Spec  goto 26
	Para_List  goto 142
	Para  goto 28


state 139
	Simple_S : Var '=' Exp . ';'  (42)

	';'  shift 143
	.  error


state 140
	Array_Exp : Array_Exp '[' Exp ']' .  (46)

	.  reduce 46


state 141
	Func_Dec : Re_Type_Spec IDENTIFIER '(' ')' . ';'  (9)

	';'  shift 55
	.  error


state 142
	Func_Dec : Re_Type_Spec IDENTIFIER '(' Para_List . ')' ';'  (10)
	Para_List : Para_List . ',' Para  (19)

	')'  shift 144
	','  shift 61
	.  error


state 143
	Simple_S : Var '=' Exp ';' .  (42)

	.  reduce 42


state 144
	Func_Dec : Re_Type_Spec IDENTIFIER '(' Para_List ')' . ';'  (10)

	';'  shift 101
	.  error


54 terminals, 34 nonterminals
86 grammar rules, 145 states
